(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,'*{margin:0;padding:0;box-sizing:border-box;font-family:"Roboto",sans-serif;color:#202020}body{overflow-x:hidden}header{display:flex;align-items:center;background-color:#b8c0e2;padding:1rem 2rem;user-select:none;z-index:6}header .logo-container{display:flex}header h1{font-family:"Alata",sans-serif;color:#1e3d5d}header img{width:40px;margin-right:.4rem}#content{height:100vh;height:100dvh;display:grid;grid-template-rows:3rem 10fr 2rem}#content main{display:flex}button:not(form button){display:flex;align-items:center;border:none;background:none;cursor:pointer;font-size:.9rem}img{width:23px;user-select:none}.edit-container{display:flex;align-items:center}.edit-btn,.remove-btn{padding-top:.15rem}.edit-btn img,.remove-btn img{width:20px;filter:brightness(10%) contrast(10%);margin-right:.3rem}.edit-btn:hover img,.remove-btn:hover img{filter:none}.btn-container{display:flex;align-items:center}.left-panel .active{background-color:#d9dce3;border-radius:5px}form+button:hover{background-color:#d9dce3;border-radius:5px}.home>button,.project-btn,#open-project-form,#open-task-form{padding:.15rem 0}.home>button img,.project-btn img,#open-project-form img,#open-task-form img{margin-right:.3rem}.left-panel-container{display:flex;flex-direction:column;max-width:300px;width:100%;transition:all .3s cubic-bezier(0.4, 0, 0.2, 1);position:relative;left:0}.left-panel{height:100%;padding:20px;background-color:#f1f4f6}.left-panel .home,.left-panel .projects{display:flex;flex-direction:column;font-size:1rem;font-weight:100}.left-panel .home .btn-container div,.left-panel .home .nav-btn div,.left-panel .home #open-project-form,.left-panel .projects .btn-container div,.left-panel .projects .nav-btn div,.left-panel .projects #open-project-form{text-align:left}.left-panel .nav-btn:hover{background-color:#d9dce3;border-radius:5px}.left-panel .project-btn:focus-within .edit-container{display:flex;align-items:center}.left-panel .projects h3{margin-top:2rem}.left-panel .projects>button,.left-panel #project-form{margin-top:1rem}.left-panel .project-list .project-btn{display:flex;justify-content:space-between;cursor:pointer}.left-panel .project-list .project-btn:hover{background-color:#d9dce3;border-radius:5px}.left-panel .project-list .project-btn:hover .edit-container{display:flex;align-items:center}.left-panel .project-list .edit-container{display:none}.left-panel .edit-active{background-color:#d9dce3}.left-panel .edit-active .edit-container{display:flex;align-items:center}.right-panel{display:flex;flex-direction:column;flex:1;max-width:800px;margin:0 auto;margin-top:4rem;padding:20px;background-color:#fff}.right-panel .title-container{display:flex;align-items:center;margin-bottom:1.4rem}.right-panel .title-container img{width:30px;margin-right:.6rem}.right-panel .title-container img[src*=box]{filter:invert(60%) sepia(46%) saturate(322%) hue-rotate(103deg) brightness(90%) contrast(93%)}.right-panel #open-task-form{margin-top:1rem}.right-panel .task-item-container{display:flex;justify-content:space-between;align-items:flex-start;background-color:#fcfcfc;border-radius:5px;margin-bottom:.5rem;box-shadow:rgba(60,64,67,.3) 0px 1px 2px 0px,rgba(60,64,67,.15) 0px 1px 3px 1px}.right-panel .task-item-container .task-title{margin-right:2rem;word-wrap:break-word;word-break:break-word}.right-panel .task-item-container .parent-title{color:rgba(136,136,136,.9)}.right-panel .task-item-container .task-btns-container{display:flex}.right-panel .task-item-container .task-btns-container .task-date{white-space:nowrap;margin:0 1rem 0 3rem;min-width:80px}.right-panel .task-item-container .checkbox-container{display:flex}.right-panel .task-item-container .checkbox-container .task-checkbox{appearance:none;aspect-ratio:1;width:22px;height:22px;border-radius:50%;border:3px solid #797979;background-color:#f4f4f4;position:relative;padding:10px;margin-right:10px;cursor:pointer}.right-panel .task-item-container .checkbox-container .task-checkbox.low{border:3px solid #5d74f9;background-color:#dce7ff}.right-panel .task-item-container .checkbox-container .task-checkbox.medium{border:3px solid #e88307;background-color:#fff1dc}.right-panel .task-item-container .checkbox-container .task-checkbox.high{border:3px solid #dc2d2d;background-color:#f3dada}.right-panel .task-item-container .checkbox-container .task-checkbox::before{content:"";position:absolute;top:50%;left:50%;transform:translate(-50%, -50%) rotate(225deg) scale(1, -1);width:3px;height:9px;border:3px solid #797979;border-left:3px solid #797979;border-top:none;border-right:none;opacity:0}.right-panel .task-item-container .checkbox-container .task-checkbox.low::before{border-color:#5d74f9;border-left-color:#5d74f9}.right-panel .task-item-container .checkbox-container .task-checkbox.medium::before{border-color:#e88307;border-left-color:#e88307}.right-panel .task-item-container .checkbox-container .task-checkbox.high::before{border-color:#dc2d2d;border-left-color:#dc2d2d}.right-panel .task-item-container .checkbox-container .task-checkbox:hover::before{opacity:.4}.right-panel .task-item-container .checkbox-container .task-checkbox:checked,.right-panel .task-item-container .checkbox-container .task-checkbox:hover{background-color:#d7d7d7}.right-panel .task-item-container .checkbox-container .task-checkbox.low:checked,.right-panel .task-item-container .checkbox-container .task-checkbox.low:hover{background-color:#c5d7ff}.right-panel .task-item-container .checkbox-container .task-checkbox.medium:checked,.right-panel .task-item-container .checkbox-container .task-checkbox.medium:hover{background-color:#ffe5be}.right-panel .task-item-container .checkbox-container .task-checkbox.high:checked,.right-panel .task-item-container .checkbox-container .task-checkbox.high:hover{background-color:#fdcfcf}.right-panel .task-item-container .checkbox-container .task-checkbox:checked::before{opacity:1}.right-panel .task-item-container.checked{background-color:rgba(195,203,216,.35)}.right-panel .task-item-container.checked .task-title{text-decoration:line-through 2px;color:rgba(32,32,32,.4)}.right-panel .task-item-container.checked .task-date,.right-panel .task-item-container.checked .task-priority{color:rgba(32,32,32,.4)}.right-panel .edit-active,.right-panel .task-item-container.checked.edit-active{background-color:#bccfe9}.right-panel .task-item-container:first-of-type{margin-top:30px}.right-panel .task-priority,.right-panel .task-date,.right-panel .task-title{position:relative;padding-top:.25rem}.right-panel .task-item-container:first-of-type .task-title::before{position:absolute;bottom:100%;transform:translate(0, -8px);color:#888;word-break:normal;content:"Task"}.right-panel .task-item-container:first-of-type .task-priority::before{position:absolute;bottom:100%;transform:translate(0, -8px);color:#888;word-break:normal;content:"Priority";right:0}.right-panel .task-item-container:first-of-type .task-date::before{position:absolute;bottom:100%;transform:translate(0, -8px);color:#888;word-break:normal;content:"Due Date"}.hidden{display:none}footer{display:flex;justify-content:center;align-items:center;font-size:.9rem;padding:.3rem;background-color:#cdd1e5;z-index:6}.modal{color:#202d3f;position:fixed;top:50%;left:50%;transform:translate(-50%, -50%) scale(0);z-index:5;background-color:#ececec;width:min(90%,350px);font-size:1rem;font-weight:600;box-shadow:rgba(60,64,67,.3) 0px 1px 2px 0px,rgba(60,64,67,.15) 0px 1px 3px 1px}.modal.active{transform:translate(-50%, -50%) scale(1)}.modal h3{padding:.7rem 1rem;color:#1d1d1d;background-color:#a4a9b7}#edit-task-form,#edit-project-form,#project-form,#task-form,#delete-project-form,#delete-task-form{padding:1rem}#edit-task-form p,#edit-project-form p,#project-form p,#task-form p,#delete-project-form p,#delete-task-form p{font-weight:400}#edit-task-form p span,#edit-project-form p span,#project-form p span,#task-form p span,#delete-project-form p span,#delete-task-form p span{font-weight:700}#edit-task-form input,#edit-task-form select,#edit-project-form input,#edit-project-form select,#project-form input,#project-form select,#task-form input,#task-form select,#delete-project-form input,#delete-project-form select,#delete-task-form input,#delete-task-form select{box-shadow:rgba(60,64,67,.3) 0px 1px 2px 0px,rgba(60,64,67,.15) 0px 1px 3px 1px;border:1px solid #a4a9b7;padding:5px;width:100%;margin-bottom:.5rem;margin-top:.25rem;background-color:#fff}#edit-task-form button,#edit-project-form button,#project-form button,#task-form button,#delete-project-form button,#delete-task-form button{cursor:pointer;font-size:.9rem;color:#fff;background-color:#63749e;border:none;border-radius:3px;padding:.2rem .6rem;margin-left:auto}#edit-task-form button:hover,#edit-project-form button:hover,#project-form button:hover,#task-form button:hover,#delete-project-form button:hover,#delete-task-form button:hover{background-color:#4a587e}#edit-task-form #form-btn-delete,#edit-project-form #form-btn-delete,#project-form #form-btn-delete,#task-form #form-btn-delete,#delete-project-form #form-btn-delete,#delete-task-form #form-btn-delete{background-color:#dc3030}#edit-task-form #form-btn-delete:hover,#edit-project-form #form-btn-delete:hover,#project-form #form-btn-delete:hover,#task-form #form-btn-delete:hover,#delete-project-form #form-btn-delete:hover,#delete-task-form #form-btn-delete:hover{background-color:#b61f1f}#project-form{background-color:rgba(195,203,216,.35);padding:1rem 1rem}#task-form{margin-top:1rem;padding:1rem 1rem;background-color:rgba(195,203,216,.25)}#task-form .date-buttons{display:flex;gap:.5rem}#task-form .date-buttons button{flex:1;color:#202020}#task-form .date-buttons #date-today,#task-form .date-buttons #edit-date-today{background-color:rgba(253,166,5,.4)}#task-form .date-buttons #date-today:hover,#task-form .date-buttons #edit-date-today:hover{background-color:rgba(253,166,5,.6)}#task-form .date-buttons #date-tomorrow,#task-form .date-buttons #edit-date-tomorrow{background-color:rgba(251,69,72,.25)}#task-form .date-buttons #date-tomorrow:hover,#task-form .date-buttons #edit-date-tomorrow:hover{background-color:rgba(251,69,72,.4)}#task-form .date-buttons #date-next-week,#task-form .date-buttons #edit-date-next-week{background-color:rgba(54,147,136,.25)}#task-form .date-buttons #date-next-week:hover,#task-form .date-buttons #edit-date-next-week:hover{background-color:rgba(54,147,136,.45)}#edit-task-form .date-buttons{display:flex;gap:.5rem}#edit-task-form .date-buttons button{flex:1;color:#202020}#edit-task-form .date-buttons #date-today,#edit-task-form .date-buttons #edit-date-today{background-color:rgba(253,166,5,.4)}#edit-task-form .date-buttons #date-today:hover,#edit-task-form .date-buttons #edit-date-today:hover{background-color:rgba(253,166,5,.6)}#edit-task-form .date-buttons #date-tomorrow,#edit-task-form .date-buttons #edit-date-tomorrow{background-color:rgba(251,69,72,.25)}#edit-task-form .date-buttons #date-tomorrow:hover,#edit-task-form .date-buttons #edit-date-tomorrow:hover{background-color:rgba(251,69,72,.4)}#edit-task-form .date-buttons #date-next-week,#edit-task-form .date-buttons #edit-date-next-week{background-color:rgba(54,147,136,.25)}#edit-task-form .date-buttons #date-next-week:hover,#edit-task-form .date-buttons #edit-date-next-week:hover{background-color:rgba(54,147,136,.45)}#overlay,#menu-overlay{position:fixed;z-index:0;opacity:0;top:0;left:0;right:0;bottom:0;background-color:rgba(0,0,0,.5);pointer-events:none}#overlay.active{z-index:4;opacity:1;pointer-events:all}#hamburger-menu{display:none}#hamburger-menu img{width:30px}.burger{position:relative;width:40px;height:30px;background:rgba(0,0,0,0);cursor:pointer;display:block}.burger input{display:none}.burger span{display:block;position:absolute;height:4px;width:100%;background:#000;border-radius:9px;opacity:1;left:0;transform:rotate(0deg);transition:.25s ease-in-out}.burger #burger-open{display:block}.burger #burger-close{display:none}.burger input:checked~#burger-open{display:none}.burger input:checked~#burger-close{display:block}@media(max-width: 750px){#content main{position:relative;height:100%}header{position:relative;justify-content:flex-start}.logo-container{position:absolute;left:50%;transform:translateX(-50%)}#hamburger-menu{display:block;margin-right:auto}#menu-overlay.active{z-index:2;opacity:1;pointer-events:all}.right-panel{width:100%}.left-panel-container{position:fixed;height:100%;z-index:3;left:-300px}.left-panel{overflow-y:auto}.left-panel-container.active{position:absolute;height:100%;z-index:3;left:0}.right-panel .task-item-container{display:block}.task-title::before,.task-priority::before,.task-date::before,.task-priority{display:none}.task-btns-container{justify-content:space-between;padding-bottom:.3rem}.right-panel .task-item-container .task-btns-container .task-date{margin-left:36px}}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"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",sourcesContent:['//page component colors\n$header: rgb(184 192 226);\n$left-panel: rgb(241, 244, 246);\n$right-panel: rgb(255, 255, 255);\n$footer: rgb(205 209 229);\n\n//text colors\n$dark: rgb(32, 32, 32);\n$dark-opacity: rgba(32, 32, 32, 0.4);\n$gray: rgb(136, 136, 136);\n$header-text: rgb(30, 61, 93);\n\n//shadows\n$shadow:rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\n\n//button colors\n$task-bg: rgb(252, 252, 252);\n$task-bg-checked: rgba(195, 203, 216, 0.35);\n$nav-hover-bg: rgb(217, 220, 227);\n$nav-active-bg: rgb(217, 220, 227);\n$task-edit-bg: rgb(188, 207, 233);\n$project-edit-bg: rgb(217, 220, 227);\n$form-button: rgb(99, 116, 158);\n$form-button-hover: rgb(99, 116, 158);\n$form-button-hover: rgb(74, 88, 126);\n$form-button-delete: rgb(220, 48, 48);\n$form-button-delete-hover: rgb(182, 31, 31);\n$form-button-today: rgba(253, 166, 5, 0.4);\n$form-button-tomorrow: rgba(251, 69, 72, 0.25) ;\n$form-button-next-week: rgba(54, 147, 136, 0.25);\n$form-button-today-hover: rgba(253, 166, 5, 0.6);\n$form-button-tomorrow-hover: rgba(251, 69, 72, 0.4) ;\n$form-button-next-week-hover: rgba(54, 147, 136, 0.45);\n\n//checkbox colors\n$border-none: rgb(121, 121, 121);\n$border-low: rgb(93, 116, 249);\n$border-medium: rgb(232, 131, 7);\n$border-high: rgb(220, 45, 45);\n$bg-none: rgb(244, 244, 244);\n$bg-low: rgb(220, 231, 255);\n$bg-medium: rgb(255, 241, 220);\n$bg-high: rgb(243, 218, 218);\n$bg-none-checked: rgb(215, 215, 215);\n$bg-low-checked: rgb(197, 215, 255);\n$bg-medium-checked: rgb(255, 229, 190);\n$bg-high-checked: rgb(253, 207, 207);\n\n//Modal screen colors\n$modal-bg: rgb(236 236 236);\n$modal-header: rgb(164, 169, 183);\n$modal-title: rgb(29, 29, 29);\n$modal-text: rgb(32, 45, 63);\n$modal-overlay: rgba(0, 0, 0, 0.5);\n\n* {\n    margin: 0;\n\tpadding: 0;\n    box-sizing: border-box;\n    font-family: \'Roboto\', sans-serif;\n    color: $dark;\n}\nbody {\n    overflow-x: hidden;\n}\nheader {\n    display: flex;\n    align-items: center;\n    background-color: $header;\n    padding: 1rem 2rem;\n    user-select: none;\n    z-index: 6;\n    .logo-container {\n        display: flex;\n    }\n    h1 {\n        font-family: \'Alata\', sans-serif;\n        color: $header-text;\n    }\n    img { \n        width: 40px;\n        margin-right: 0.4rem;\n    }\n}\n#content {\n    height: 100vh;\n    height: 100dvh;\n    display: grid;\n    grid-template-rows:3rem 10fr 2rem;\n    main {\n        display: flex;\n    }\n}\nbutton:not(form button){\n    display: flex;\n    align-items: center;\n    border: none;\n    background: none;\n    cursor: pointer;\n    font-size: 0.9rem;\n}\nimg {\n    width: 23px;\n    user-select: none;\n}\n.edit-container { \n    display: flex;\n    align-items: center;\n}\n.edit-btn, .remove-btn {\n    padding-top: 0.15rem;\n    img {\n        width: 20px;\n        filter: brightness(10%) contrast(10%);\n        margin-right: 0.3rem;\n    }\n}\n.edit-btn:hover, .remove-btn:hover {\n    img {\n        filter: none;\n    }\n}\n.btn-container {\n    display: flex;\n    align-items: center;\n}\n.left-panel .active {\n    background-color: $nav-active-bg;\n    border-radius: 5px;\n}\nform + button:hover {\n    background-color: $nav-hover-bg;\n    border-radius: 5px;\n\n}\n.home > button, .project-btn, #open-project-form, #open-task-form {\n    padding: 0.15rem 0;\n    img {\n        margin-right: 0.3rem;\n    }\n}\n\n//Left panel container\n.left-panel-container {\n    display: flex;\n    flex-direction: column;\n    max-width: 300px;\n    width: 100%;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    position: relative;\n    left: 0;\n}\n//Left panel\n.left-panel {\n    height: 100%;\n    padding: 20px;\n    background-color: $left-panel;\n    .home, .projects {\n        display: flex;\n        flex-direction: column;\n        font-size: 1rem;\n        font-weight: 100;\n        .btn-container div, .nav-btn div, #open-project-form {\n            text-align: left;\n        }\n    }\n    .nav-btn:hover {\n        background-color: $nav-hover-bg;\n        border-radius: 5px;\n    }\n    .project-btn:focus-within .edit-container { \n            display: flex;\n            align-items: center;\n    }\n    .projects h3 {\n        margin-top: 2rem;\n    }\n    .projects > button, #project-form {\n        margin-top: 1rem;\n    }\n    .project-list {\n        .project-btn {\n            display: flex;\n            justify-content: space-between; \n            cursor: pointer;\n        }\n        .project-btn:hover {\n            background-color: $nav-hover-bg;\n            border-radius: 5px;\n            .edit-container { \n                display: flex;\n                align-items: center;\n            }\n        }\n        .edit-container {\n            display: none;\n        }\n    }\n    .edit-active {\n            background-color: $project-edit-bg;\n            .edit-container { \n                display: flex;\n                align-items: center;\n            }\n    }\n}\n//Right panel\n.right-panel {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    max-width: 800px;\n    margin: 0 auto;\n    margin-top: 4rem;\n    padding: 20px;\n    background-color: $right-panel;\n    .title-container {\n        display: flex;\n        align-items: center;\n        margin-bottom: 1.4rem;\n        img { \n            width: 30px; \n            margin-right: 0.6rem;\n        }\n        img[src*="box"] {\n            filter: invert(60%) sepia(46%) saturate(322%) hue-rotate(103deg) brightness(90%) contrast(93%);\n        }\n    }\n    #open-task-form {\n        margin-top: 1rem;\n    }\n    .task-item-container {\n        display: flex;\n        justify-content: space-between; \n        align-items: flex-start;\n        background-color: $task-bg;\n        border-radius: 5px;\n        margin-bottom: 0.5rem;\n        box-shadow: $shadow;\n        .task-title {\n            margin-right: 2rem;\n            word-wrap: break-word;\n            word-break: break-word;\n        }\n        .parent-title {\n            color: rgba($gray, 0.9);\n        }\n        .task-btns-container {\n            display: flex;\n            .task-date {\n                white-space:nowrap;\n                margin: 0 1rem 0 3rem;\n                min-width: 80px; //fix label alignment\n            }\n        }\n        .checkbox-container {\n            display: flex;\n            .task-checkbox {\n                appearance: none;\n                aspect-ratio: 1;\n                width: 22px;\n                height: 22px;\n                border-radius: 50%;\n                border: 3px solid $border-none;\n                background-color: $bg-none;\n                position: relative;\n                padding: 10px;\n                margin-right: 10px;\n                cursor: pointer;\n            }\n            .task-checkbox.low {\n                border: 3px solid $border-low;\n                background-color: $bg-low;\n            }\n            .task-checkbox.medium {\n                border: 3px solid $border-medium;\n                background-color: $bg-medium;\n            }\n            .task-checkbox.high {\n                border: 3px solid $border-high;\n                background-color: $bg-high;\n            }\n\n            .task-checkbox::before {\n                content: "";\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%) rotate(225deg) scale(1, -1);\n                width: 3px;\n                height: 9px;\n                border: 3px solid $border-none;\n                border-left: 3px solid $border-none;\n                border-top: none;\n                border-right: none;\n                opacity: 0; \n            }\n            .task-checkbox.low::before {\n                border-color: $border-low;;\n                border-left-color: $border-low;\n            }\n            .task-checkbox.medium::before {\n                border-color: $border-medium;;\n                border-left-color: $border-medium;\n            }\n            .task-checkbox.high::before {\n                border-color: $border-high;;\n                border-left-color: $border-high;\n            }\n\n            .task-checkbox:hover::before  {\n                opacity: 0.4;\n            }\n\n            .task-checkbox:checked, .task-checkbox:hover {\n                background-color: $bg-none-checked;\n            }\n            .task-checkbox.low:checked, .task-checkbox.low:hover {\n                background-color: $bg-low-checked;\n            }\n            .task-checkbox.medium:checked, .task-checkbox.medium:hover {\n                background-color: $bg-medium-checked;\n            }\n            .task-checkbox.high:checked, .task-checkbox.high:hover {\n                background-color: $bg-high-checked;\n            }\n            .task-checkbox:checked::before {\n                opacity: 1;\n            }\n        }\n    }\n    .task-item-container.checked {\n        background-color: $task-bg-checked;\n        .task-title {\n            text-decoration: line-through 2px;\n            color: $dark-opacity;\n        }\n        .task-date, .task-priority {\n            color: $dark-opacity;\n        }\n    }\n    .edit-active, .task-item-container.checked.edit-active {\n        background-color: $task-edit-bg;\n    }\n\n    //Task labels\n    .task-item-container:first-of-type {\n        margin-top: 30px;\n    }\n    .task-priority, .task-date, .task-title  {\n        position: relative;\n        padding-top: 0.25rem;\n    }\n    \n    @mixin before-pseudo-style {\n        position: absolute;\n        bottom: 100%;\n        transform: translate(0, -8px);\n        color: $gray;\n        word-break: normal;\n    }\n    .task-item-container:first-of-type {\n        .task-title::before {\n            @include before-pseudo-style;\n            content: "Task";\n        }\n    }\n    .task-item-container:first-of-type {\n        .task-priority::before {\n            @include before-pseudo-style;\n            content: "Priority";\n            right: 0;\n        }\n    }\n    .task-item-container:first-of-type {\n        .task-date::before {\n            @include before-pseudo-style;\n            content: "Due Date";\n        }\n    }\n}\n\n.hidden {\n    display: none;\n}\n\n//Footer\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 0.9rem;\n    padding: 0.3rem;\n    background-color: $footer;\n    z-index: 6;\n}\n\n/* Modal screen */\n.modal {\n    color: $modal-text;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    z-index: 5;\n    background-color: $modal-bg;\n    width: min(90%, 350px);\n    font-size: 1rem;\n    font-weight: 600;\n    box-shadow: $shadow;\n}\n.modal.active {\n    transform: translate(-50%, -50%) scale(1);\n}\n.modal h3 {\n    padding: 0.7rem 1rem;\n    color: $modal-title;\n    background-color: $modal-header;\n}\n#edit-task-form, #edit-project-form,#project-form, #task-form, #delete-project-form, #delete-task-form {\n    padding: 1rem;\n    p {\n        font-weight: 400;\n        span {\n            font-weight: 700;\n        }\n    }\n    input, select {\n        box-shadow: $shadow;\n        border: 1px solid $modal-header;\n        padding: 5px;\n        width: 100%;\n        margin-bottom: 0.5rem;\n        margin-top: 0.25rem;\n        background-color: white;\n    }\n    button {\n        cursor: pointer;\n        font-size: 0.9rem;\n        color: white;\n        background-color: $form-button;\n        border: none;\n        border-radius: 3px;\n        padding: 0.2rem 0.6rem;\n        margin-left: auto;\n    }\n    button:hover {\n        background-color: $form-button-hover;\n    }\n    #form-btn-delete {\n        background-color: $form-button-delete;\n    }\n    #form-btn-delete:hover {\n        background-color: $form-button-delete-hover;\n    }\n}\n#project-form {\n    background-color: $task-bg-checked;\n    padding: 1rem 1rem;\n}\n@mixin date-buttons {\n    .date-buttons {\n        display: flex;\n        gap: 0.5rem;\n        button {\n        flex: 1;\n        color: $dark;\n        }\n        #date-today, #edit-date-today {\n            background-color: $form-button-today;\n            &:hover { background-color: $form-button-today-hover; }\n        }\n        #date-tomorrow, #edit-date-tomorrow {\n            background-color: $form-button-tomorrow;\n            &:hover { background-color: $form-button-tomorrow-hover; }\n        }\n        #date-next-week, #edit-date-next-week {\n            background-color: $form-button-next-week;\n            &:hover { background-color: $form-button-next-week-hover; }\n        }\n    }\n}\n#task-form {\n    margin-top: 1rem;\n    padding: 1rem 1rem;\n    background-color: rgba($task-bg-checked, 0.25);\n    @include date-buttons;\n}\n#edit-task-form {\n    @include date-buttons;\n}\n\n#overlay, #menu-overlay {\n    position: fixed;\n    z-index: 0;\n    opacity: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: $modal-overlay;\n    pointer-events: none; \n}\n#overlay.active {\n    z-index: 4;\n    opacity: 1;\n    pointer-events: all;  /*  Avoids clicking the elements underneath the modal container */\n}\n\n//Hamburger menu\n#hamburger-menu {\n    display: none;\n    img {\n    width: 30px;\n    }\n}\n.burger {\n    position: relative;\n    width: 40px;\n    height: 30px;\n    background: transparent;\n    cursor: pointer;\n    display: block;\n}\n.burger input {\n    display: none;\n}\n.burger span {\n    display: block;\n    position: absolute;\n    height: 4px;\n    width: 100%;\n    background: black;\n    border-radius: 9px;\n    opacity: 1;\n    left: 0;\n    transform: rotate(0deg);\n    transition: .25s ease-in-out;\n}\n.burger #burger-open {\n    display: block;\n}\n.burger #burger-close {\n    display: none;\n}\n\n.burger input:checked ~ #burger-open {\n    display: none;\n}\n.burger input:checked ~ #burger-close {\n    display: block;\n}\n\n\n//Responsive design\n@media (max-width: 750px) {\n    #content main {\n        position: relative;\n        height: 100%;\n    }\n    header {\n        position: relative;\n        justify-content: flex-start;\n    }\n    .logo-container {\n        position: absolute;\n        left: 50%;\n        transform: translateX(-50%);\n    }\n    #hamburger-menu {\n        display: block;\n        margin-right: auto;\n    }\n    #menu-overlay.active {\n        z-index: 2;\n        opacity: 1;\n        pointer-events: all;\n    }\n    .right-panel {\n        width: 100%;\n    }\n    .left-panel-container {\n        position: fixed;\n        height: 100%;\n        z-index: 3;\n        left: -300px;\n    }\n    .left-panel {\n        overflow-y: auto; \n    }\n    .left-panel-container.active {\n        position: absolute;\n        height: 100%;\n        z-index: 3;\n        left: 0;\n    }\n    .right-panel .task-item-container {\n        display: block;\n    }\n    .task-title::before, .task-priority::before, .task-date::before, .task-priority {\n        display: none;\n    }\n    .task-btns-container {\n        justify-content: space-between;\n        padding-bottom: 0.3rem;\n    }\n    .right-panel .task-item-container .task-btns-container .task-date {\n        margin-left: 36px;\n    }\n}'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=n(A),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var f=o(m,r);r.byIndex=s,t.splice(s,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var c=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),s=n(565),c=n.n(s),d=n(216),l=n.n(d),A=n(589),u=n.n(A),m=n(192),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;class h{constructor(e,t="no date",n="-",r=!1){this.title=e,this.date=t,this.priority=n,this.checked=r}}function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function p(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function b(e){p(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===g(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function C(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}function k(e){p(1,arguments);var t=b(e),n=t.getUTCDay(),r=(n<1?7:0)+n-1;return t.setUTCDate(t.getUTCDate()-r),t.setUTCHours(0,0,0,0),t}function v(e){p(1,arguments);var t=b(e),n=t.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(n+1,0,4),r.setUTCHours(0,0,0,0);var o=k(r),a=new Date(0);a.setUTCFullYear(n,0,4),a.setUTCHours(0,0,0,0);var i=k(a);return t.getTime()>=o.getTime()?n+1:t.getTime()>=i.getTime()?n:n-1}var y={};function w(){return y}function x(e,t){var n,r,o,a,i,s,c,d;p(1,arguments);var l=w(),A=C(null!==(n=null!==(r=null!==(o=null!==(a=null==t?void 0:t.weekStartsOn)&&void 0!==a?a:null==t||null===(i=t.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:l.weekStartsOn)&&void 0!==r?r:null===(c=l.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==n?n:0);if(!(A>=0&&A<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=b(e),m=u.getUTCDay(),f=(m<A?7:0)+m-A;return u.setUTCDate(u.getUTCDate()-f),u.setUTCHours(0,0,0,0),u}function B(e,t){var n,r,o,a,i,s,c,d;p(1,arguments);var l=b(e),A=l.getUTCFullYear(),u=w(),m=C(null!==(n=null!==(r=null!==(o=null!==(a=null==t?void 0:t.firstWeekContainsDate)&&void 0!==a?a:null==t||null===(i=t.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:u.firstWeekContainsDate)&&void 0!==r?r:null===(c=u.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==n?n:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var f=new Date(0);f.setUTCFullYear(A+1,0,m),f.setUTCHours(0,0,0,0);var h=x(f,t),g=new Date(0);g.setUTCFullYear(A,0,m),g.setUTCHours(0,0,0,0);var k=x(g,t);return l.getTime()>=h.getTime()?A+1:l.getTime()>=k.getTime()?A:A-1}function j(e,t){for(var n=e<0?"-":"",r=Math.abs(e).toString();r.length<t;)r="0"+r;return n+r}const T=function(e,t){var n=e.getUTCFullYear(),r=n>0?n:1-n;return j("yy"===t?r%100:r,t.length)},I=function(e,t){var n=e.getUTCMonth();return"M"===t?String(n+1):j(n+1,2)},E=function(e,t){return j(e.getUTCDate(),t.length)},S=function(e,t){return j(e.getUTCHours()%12||12,t.length)},L=function(e,t){return j(e.getUTCHours(),t.length)},D=function(e,t){return j(e.getUTCMinutes(),t.length)},M=function(e,t){return j(e.getUTCSeconds(),t.length)},$=function(e,t){var n=t.length,r=e.getUTCMilliseconds();return j(Math.floor(r*Math.pow(10,n-3)),t.length)};var q={G:function(e,t,n){var r=e.getUTCFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return n.era(r,{width:"abbreviated"});case"GGGGG":return n.era(r,{width:"narrow"});default:return n.era(r,{width:"wide"})}},y:function(e,t,n){if("yo"===t){var r=e.getUTCFullYear(),o=r>0?r:1-r;return n.ordinalNumber(o,{unit:"year"})}return T(e,t)},Y:function(e,t,n,r){var o=B(e,r),a=o>0?o:1-o;return"YY"===t?j(a%100,2):"Yo"===t?n.ordinalNumber(a,{unit:"year"}):j(a,t.length)},R:function(e,t){return j(v(e),t.length)},u:function(e,t){return j(e.getUTCFullYear(),t.length)},Q:function(e,t,n){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"Q":return String(r);case"QQ":return j(r,2);case"Qo":return n.ordinalNumber(r,{unit:"quarter"});case"QQQ":return n.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return n.quarter(r,{width:"narrow",context:"formatting"});default:return n.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,t,n){var r=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"q":return String(r);case"qq":return j(r,2);case"qo":return n.ordinalNumber(r,{unit:"quarter"});case"qqq":return n.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return n.quarter(r,{width:"narrow",context:"standalone"});default:return n.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,t,n){var r=e.getUTCMonth();switch(t){case"M":case"MM":return I(e,t);case"Mo":return n.ordinalNumber(r+1,{unit:"month"});case"MMM":return n.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return n.month(r,{width:"narrow",context:"formatting"});default:return n.month(r,{width:"wide",context:"formatting"})}},L:function(e,t,n){var r=e.getUTCMonth();switch(t){case"L":return String(r+1);case"LL":return j(r+1,2);case"Lo":return n.ordinalNumber(r+1,{unit:"month"});case"LLL":return n.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return n.month(r,{width:"narrow",context:"standalone"});default:return n.month(r,{width:"wide",context:"standalone"})}},w:function(e,t,n,r){var o=function(e,t){p(1,arguments);var n=b(e),r=x(n,t).getTime()-function(e,t){var n,r,o,a,i,s,c,d;p(1,arguments);var l=w(),A=C(null!==(n=null!==(r=null!==(o=null!==(a=null==t?void 0:t.firstWeekContainsDate)&&void 0!==a?a:null==t||null===(i=t.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==o?o:l.firstWeekContainsDate)&&void 0!==r?r:null===(c=l.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==n?n:1),u=B(e,t),m=new Date(0);return m.setUTCFullYear(u,0,A),m.setUTCHours(0,0,0,0),x(m,t)}(n,t).getTime();return Math.round(r/6048e5)+1}(e,r);return"wo"===t?n.ordinalNumber(o,{unit:"week"}):j(o,t.length)},I:function(e,t,n){var r=function(e){p(1,arguments);var t=b(e),n=k(t).getTime()-function(e){p(1,arguments);var t=v(e),n=new Date(0);return n.setUTCFullYear(t,0,4),n.setUTCHours(0,0,0,0),k(n)}(t).getTime();return Math.round(n/6048e5)+1}(e);return"Io"===t?n.ordinalNumber(r,{unit:"week"}):j(r,t.length)},d:function(e,t,n){return"do"===t?n.ordinalNumber(e.getUTCDate(),{unit:"date"}):E(e,t)},D:function(e,t,n){var r=function(e){p(1,arguments);var t=b(e),n=t.getTime();t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0);var r=n-t.getTime();return Math.floor(r/864e5)+1}(e);return"Do"===t?n.ordinalNumber(r,{unit:"dayOfYear"}):j(r,t.length)},E:function(e,t,n){var r=e.getUTCDay();switch(t){case"E":case"EE":case"EEE":return n.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return n.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},e:function(e,t,n,r){var o=e.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(t){case"e":return String(a);case"ee":return j(a,2);case"eo":return n.ordinalNumber(a,{unit:"day"});case"eee":return n.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return n.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(o,{width:"short",context:"formatting"});default:return n.day(o,{width:"wide",context:"formatting"})}},c:function(e,t,n,r){var o=e.getUTCDay(),a=(o-r.weekStartsOn+8)%7||7;switch(t){case"c":return String(a);case"cc":return j(a,t.length);case"co":return n.ordinalNumber(a,{unit:"day"});case"ccc":return n.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return n.day(o,{width:"narrow",context:"standalone"});case"cccccc":return n.day(o,{width:"short",context:"standalone"});default:return n.day(o,{width:"wide",context:"standalone"})}},i:function(e,t,n){var r=e.getUTCDay(),o=0===r?7:r;switch(t){case"i":return String(o);case"ii":return j(o,t.length);case"io":return n.ordinalNumber(o,{unit:"day"});case"iii":return n.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return n.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return n.day(r,{width:"short",context:"formatting"});default:return n.day(r,{width:"wide",context:"formatting"})}},a:function(e,t,n){var r=e.getUTCHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(e,t,n){var r,o=e.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",t){case"b":case"bb":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(e,t,n){var r,o=e.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",t){case"B":case"BB":case"BBB":return n.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return n.dayPeriod(r,{width:"narrow",context:"formatting"});default:return n.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(e,t,n){if("ho"===t){var r=e.getUTCHours()%12;return 0===r&&(r=12),n.ordinalNumber(r,{unit:"hour"})}return S(e,t)},H:function(e,t,n){return"Ho"===t?n.ordinalNumber(e.getUTCHours(),{unit:"hour"}):L(e,t)},K:function(e,t,n){var r=e.getUTCHours()%12;return"Ko"===t?n.ordinalNumber(r,{unit:"hour"}):j(r,t.length)},k:function(e,t,n){var r=e.getUTCHours();return 0===r&&(r=24),"ko"===t?n.ordinalNumber(r,{unit:"hour"}):j(r,t.length)},m:function(e,t,n){return"mo"===t?n.ordinalNumber(e.getUTCMinutes(),{unit:"minute"}):D(e,t)},s:function(e,t,n){return"so"===t?n.ordinalNumber(e.getUTCSeconds(),{unit:"second"}):M(e,t)},S:function(e,t){return $(e,t)},X:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();if(0===o)return"Z";switch(t){case"X":return U(o);case"XXXX":case"XX":return N(o);default:return N(o,":")}},x:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"x":return U(o);case"xxxx":case"xx":return N(o);default:return N(o,":")}},O:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+P(o,":");default:return"GMT"+N(o,":")}},z:function(e,t,n,r){var o=(r._originalDate||e).getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+P(o,":");default:return"GMT"+N(o,":")}},t:function(e,t,n,r){var o=r._originalDate||e;return j(Math.floor(o.getTime()/1e3),t.length)},T:function(e,t,n,r){return j((r._originalDate||e).getTime(),t.length)}};function P(e,t){var n=e>0?"-":"+",r=Math.abs(e),o=Math.floor(r/60),a=r%60;if(0===a)return n+String(o);var i=t||"";return n+String(o)+i+j(a,2)}function U(e,t){return e%60==0?(e>0?"-":"+")+j(Math.abs(e)/60,2):N(e,t)}function N(e,t){var n=t||"",r=e>0?"-":"+",o=Math.abs(e);return r+j(Math.floor(o/60),2)+n+j(o%60,2)}const Y=q;var W=function(e,t){switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},J=function(e,t){switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}};const O={p:J,P:function(e,t){var n,r=e.match(/(P+)(p+)?/)||[],o=r[1],a=r[2];if(!a)return W(e,t);switch(o){case"P":n=t.dateTime({width:"short"});break;case"PP":n=t.dateTime({width:"medium"});break;case"PPP":n=t.dateTime({width:"long"});break;default:n=t.dateTime({width:"full"})}return n.replace("{{date}}",W(o,t)).replace("{{time}}",J(a,t))}};var z=["D","DD"],R=["YY","YYYY"];function F(e,t,n){if("YYYY"===e)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===e)throw new RangeError("Use `yy` instead of `YY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===e)throw new RangeError("Use `d` instead of `D` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===e)throw new RangeError("Use `dd` instead of `DD` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var G={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function H(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}const Q={date:H({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:H({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:H({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var X={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function Z(e){return function(t,n){var r;if("formatting"===(null!=n&&n.context?String(n.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,a=null!=n&&n.width?String(n.width):o;r=e.formattingValues[a]||e.formattingValues[o]}else{var i=e.defaultWidth,s=null!=n&&n.width?String(n.width):e.defaultWidth;r=e.values[s]||e.values[i]}return r[e.argumentCallback?e.argumentCallback(t):t]}}const K={ordinalNumber:function(e,t){var n=Number(e),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:Z({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:Z({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:Z({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:Z({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:Z({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function V(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=n.width,o=r&&e.matchPatterns[r]||e.matchPatterns[e.defaultMatchWidth],a=t.match(o);if(!a)return null;var i,s=a[0],c=r&&e.parsePatterns[r]||e.parsePatterns[e.defaultParseWidth],d=Array.isArray(c)?function(e,t){for(var n=0;n<e.length;n++)if(e[n].test(s))return n}(c):function(e,t){for(var n in e)if(e.hasOwnProperty(n)&&e[n].test(s))return n}(c);return i=e.valueCallback?e.valueCallback(d):d,{value:i=n.valueCallback?n.valueCallback(i):i,rest:t.slice(s.length)}}}var _,ee={ordinalNumber:(_={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(_.matchPattern);if(!n)return null;var r=n[0],o=e.match(_.parsePattern);if(!o)return null;var a=_.valueCallback?_.valueCallback(o[0]):o[0];return{value:a=t.valueCallback?t.valueCallback(a):a,rest:e.slice(r.length)}}),era:V({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:V({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:V({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:V({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:V({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const te={code:"en-US",formatDistance:function(e,t,n){var r,o=G[e];return r="string"==typeof o?o:1===t?o.one:o.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+r:r+" ago":r},formatLong:Q,formatRelative:function(e,t,n,r){return X[e]},localize:K,match:ee,options:{weekStartsOn:0,firstWeekContainsDate:1}};var ne=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,re=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,oe=/^'([^]*?)'?$/,ae=/''/g,ie=/[a-zA-Z]/;function se(e,t,n){var r,o,a,i,s,c,d,l,A,u,m,f,h,k,v,y,x,B;p(2,arguments);var j=String(t),T=w(),I=null!==(r=null!==(o=null==n?void 0:n.locale)&&void 0!==o?o:T.locale)&&void 0!==r?r:te,E=C(null!==(a=null!==(i=null!==(s=null!==(c=null==n?void 0:n.firstWeekContainsDate)&&void 0!==c?c:null==n||null===(d=n.locale)||void 0===d||null===(l=d.options)||void 0===l?void 0:l.firstWeekContainsDate)&&void 0!==s?s:T.firstWeekContainsDate)&&void 0!==i?i:null===(A=T.locale)||void 0===A||null===(u=A.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==a?a:1);if(!(E>=1&&E<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var S=C(null!==(m=null!==(f=null!==(h=null!==(k=null==n?void 0:n.weekStartsOn)&&void 0!==k?k:null==n||null===(v=n.locale)||void 0===v||null===(y=v.options)||void 0===y?void 0:y.weekStartsOn)&&void 0!==h?h:T.weekStartsOn)&&void 0!==f?f:null===(x=T.locale)||void 0===x||null===(B=x.options)||void 0===B?void 0:B.weekStartsOn)&&void 0!==m?m:0);if(!(S>=0&&S<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!I.localize)throw new RangeError("locale must contain localize property");if(!I.formatLong)throw new RangeError("locale must contain formatLong property");var L=b(e);if(!function(e){if(p(1,arguments),!function(e){return p(1,arguments),e instanceof Date||"object"===g(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=b(e);return!isNaN(Number(t))}(L))throw new RangeError("Invalid time value");var D=function(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}(L),M=function(e,t){return p(2,arguments),function(e,t){p(2,arguments);var n=b(e).getTime(),r=C(t);return new Date(n+r)}(e,-C(t))}(L,D),$={firstWeekContainsDate:E,weekStartsOn:S,locale:I,_originalDate:L};return j.match(re).map((function(e){var t=e[0];return"p"===t||"P"===t?(0,O[t])(e,I.formatLong):e})).join("").match(ne).map((function(r){if("''"===r)return"'";var o,a,i=r[0];if("'"===i)return(a=(o=r).match(oe))?a[1].replace(ae,"'"):o;var s,c=Y[i];if(c)return null!=n&&n.useAdditionalWeekYearTokens||(s=r,-1===R.indexOf(s))||F(r,t,String(e)),null!=n&&n.useAdditionalDayOfYearTokens||!function(e){return-1!==z.indexOf(e)}(r)||F(r,t,String(e)),c(M,r,I.localize,$);if(i.match(ie))throw new RangeError("Format string contains an unescaped latin alphabet character `"+i+"`");return r})).join("")}function ce(e,t){if(p(2,arguments),!t||"object"!==g(t))return new Date(NaN);var n=t.years?C(t.years):0,r=t.months?C(t.months):0,o=t.weeks?C(t.weeks):0,a=t.days?C(t.days):0,i=t.hours?C(t.hours):0,s=t.minutes?C(t.minutes):0,c=t.seconds?C(t.seconds):0,d=b(e),l=r||n?function(e,t){p(2,arguments);var n=b(e),r=C(t);if(isNaN(r))return new Date(NaN);if(!r)return n;var o=n.getDate(),a=new Date(n.getTime());return a.setMonth(n.getMonth()+r+1,0),o>=a.getDate()?a:(n.setFullYear(a.getFullYear(),a.getMonth(),o),n)}(d,r+12*n):d,A=a||o?function(e,t){p(2,arguments);var n=b(e),r=C(t);return isNaN(r)?new Date(NaN):r?(n.setDate(n.getDate()+r),n):n}(l,a+7*o):l,u=1e3*(c+60*(s+60*i));return new Date(A.getTime()+u)}function de(e,t){var n,r,o,a,i,s,c,d;p(1,arguments);var l=w(),A=C(null!==(n=null!==(r=null!==(o=null!==(a=null==t?void 0:t.weekStartsOn)&&void 0!==a?a:null==t||null===(i=t.locale)||void 0===i||null===(s=i.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==o?o:l.weekStartsOn)&&void 0!==r?r:null===(c=l.locale)||void 0===c||null===(d=c.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==n?n:0);if(!(A>=0&&A<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=b(e),m=u.getDay(),f=(m<A?7:0)+m-A;return u.setDate(u.getDate()-f),u.setHours(0,0,0,0),u}Math.pow(10,8);var le=36e5;var Ae={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},ue=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,me=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,fe=/^([+-])(\d{2})(?::?(\d{2}))?$/;function he(e){return e?parseInt(e):1}function ge(e){return e&&parseFloat(e.replace(",","."))||0}var pe=[31,null,31,30,31,30,31,31,30,31,30,31];function be(e){return e%400==0||e%4==0&&e%100!=0}const Ce=(()=>{class e{constructor(e){this.title=e,this.tasks=[]}addTask(e,t,n,r){const a=new h(e,t,n);o[r].tasks.push(a),o.forEach(((e,t)=>e.tasks.forEach((e=>{e.parentProjectIndex=t})))),o.forEach((e=>e.tasks.forEach(((e,t)=>{e.taskIndex=t}))))}addProject(t){const n=new e(t);o.push(n)}removeProject(e){o.splice(e,1),o.forEach(((e,t)=>e.tasks.forEach((e=>{e.parentProjectIndex=t}))))}removeTask(e,t){o[t].tasks.splice(e,1),o.forEach((e=>e.tasks.forEach(((e,t)=>{e.taskIndex=t}))))}editProject(e,t){o[e].title=t}editTask(e,t,n,r,a){o[e].tasks[t].title=n,o[e].tasks[t].date=r,o[e].tasks[t].priority=a}checkTask(e,t){!1===o[e].tasks[t].checked?o[e].tasks[t].checked=!0:o[e].tasks[t].checked=!1}setPriority(e,t,n){o[e].tasks[t].priority=n}}const t=se(new Date,"yyyy-MM-dd"),n=se(ce(new Date,{days:1}),"yyyy-MM-dd"),r=se(ce(new Date,{weeks:1}),"yyyy-MM-dd");let o=[new e("Personal"),new e("Shopping"),new e("Study"),new e("Health")];const a=new e;o[0].tasks.push(new h("Organize and clean the desk",t,"medium")),o[0].tasks.push(new h("Schedule a haircut appointment",r,"low")),o[1].tasks.push(new h("Buy groceries for the week.",n,"high")),o[1].tasks.push(new h("Purchase a new pair of shoes.",se(ce(new Date,{days:8}),"yyyy-MM-dd"),"low")),o[2].tasks.push(new h("Review notes for the upcoming exam",se(ce(new Date,{days:10}),"yyyy-MM-dd"),"-")),o[3].tasks.push(new h("Go for a 30-minute jog in the park","no date","medium")),o[3].tasks.push(new h("Research and sign up for a fitness class",r,"high")),o.forEach(((e,t)=>e.tasks.forEach((e=>{e.parentProjectIndex=t})))),o.forEach((e=>e.tasks.forEach(((e,t)=>{e.taskIndex=t}))));let i=()=>{const e=o.reduce(((e,t)=>e.concat(t.tasks)),[]);return e.sort(((e,t)=>e.date<t.date?-1:1)),e.filter((e=>1!=e.checked)).concat(e.filter((e=>!0===e.checked)))};return{myProject:a,today:t,tomorrow:n,nextWeek:r,get projectList(){return o},set projectList(e){(e=>{o=e})(e)},get allTasks(){return i()},get todayTasks(){return i().filter((e=>e.date===t))},get weekTasks(){return i().filter((e=>function(e,t){return p(1,arguments),function(e,t,n){p(2,arguments);var r=de(e,n),o=de(t,n);return r.getTime()===o.getTime()}(e,Date.now(),t)}(function(e,t){var n;p(1,arguments);var r=C(null!==(n=null==t?void 0:t.additionalDigits)&&void 0!==n?n:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var o,a=function(e){var t,n={},r=e.split(Ae.dateTimeDelimiter);if(r.length>2)return n;if(/:/.test(r[0])?t=r[0]:(n.date=r[0],t=r[1],Ae.timeZoneDelimiter.test(n.date)&&(n.date=e.split(Ae.timeZoneDelimiter)[0],t=e.substr(n.date.length,e.length))),t){var o=Ae.timezone.exec(t);o?(n.time=t.replace(o[1],""),n.timezone=o[1]):n.time=t}return n}(e);if(a.date){var i=function(e,t){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),r=e.match(n);if(!r)return{year:NaN,restDateString:""};var o=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:null===a?o:100*a,restDateString:e.slice((r[1]||r[2]).length)}}(a.date,r);o=function(e,t){if(null===t)return new Date(NaN);var n=e.match(ue);if(!n)return new Date(NaN);var r=!!n[4],o=he(n[1]),a=he(n[2])-1,i=he(n[3]),s=he(n[4]),c=he(n[5])-1;if(r)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,s,c)?function(e,t,n){var r=new Date(0);r.setUTCFullYear(e,0,4);var o=7*(t-1)+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}(t,s,c):new Date(NaN);var d=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(pe[t]||(be(e)?29:28))}(t,a,i)&&function(e,t){return t>=1&&t<=(be(e)?366:365)}(t,o)?(d.setUTCFullYear(t,a,Math.max(o,i)),d):new Date(NaN)}(i.restDateString,i.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);var s,c=o.getTime(),d=0;if(a.time&&(d=function(e){var t=e.match(me);if(!t)return NaN;var n=ge(t[1]),r=ge(t[2]),o=ge(t[3]);return function(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(n,r,o)?n*le+6e4*r+1e3*o:NaN}(a.time),isNaN(d)))return new Date(NaN);if(!a.timezone){var l=new Date(c+d),A=new Date(0);return A.setFullYear(l.getUTCFullYear(),l.getUTCMonth(),l.getUTCDate()),A.setHours(l.getUTCHours(),l.getUTCMinutes(),l.getUTCSeconds(),l.getUTCMilliseconds()),A}return s=function(e){if("Z"===e)return 0;var t=e.match(fe);if(!t)return 0;var n="+"===t[1]?-1:1,r=parseInt(t[2]),o=t[3]&&parseInt(t[3])||0;return function(e,t){return t>=0&&t<=59}(0,o)?n*(r*le+6e4*o):NaN}(a.timezone),isNaN(s)?new Date(NaN):new Date(c+d+s)}(e.date))))},addTask:a.addTask,addProject:a.addProject,removeProject:a.removeProject,removeTask:a.removeTask,editProject:a.editProject,editTask:a.editTask,checkTask:a.checkTask,setPriority:a.setPriority}})(),ke=document.querySelector(".project-title"),ve=document.querySelector("#title-icon"),ye=document.querySelector("#all-btn"),we=document.querySelector("#today-btn"),xe=document.querySelector("#week-btn");function Be(){localStorage.setItem("todoList",JSON.stringify(Ce.projectList)),je()}function je(){let e=JSON.parse(localStorage.getItem("todoList"));Ce.projectList=e}function Te(e,t,n){ke.textContent=t,ve.src=`./assets/${n}.svg`,Le(e),Ee(e),Ue.classList.add("hidden")}localStorage.getItem("todoList")?je():Be(),ye.addEventListener("click",(()=>Te("allTasks","All tasks","stack"))),we.addEventListener("click",(()=>Te("today","Today","star"))),xe.addEventListener("click",(()=>Te("week","This week","calendar")));let Ie=0;function Ee(e){Ie=e;const t=document.querySelectorAll(".project-btn"),n=document.querySelectorAll(".nav-btn");t.forEach((e=>e.classList.remove("active"))),n.forEach((e=>e.classList.remove("active"))),0!=t.length&&Number.isInteger(e)?(t[Ie].classList.add("active"),Ye.classList.remove("hidden")):(Ye.classList.add("hidden"),"allTasks"===e&&n[0].classList.add("active"),"today"===e&&n[1].classList.add("active"),"week"===e&&n[2].classList.add("active"))}function Se(){const e=document.querySelector(".project-list");e.innerHTML="";for(let t=0;t<Ce.projectList.length;t++)e.innerHTML+=`<div class="project-btn" data-project-index = ${t} >\n            <button>\n                <div class="btn-container">\n                    <img id="box" src="./assets/box.svg" alt="Project">\n                    <div> ${Ce.projectList[t].title}</div>\n                </div>\n            </button>\n            <div class="edit-container">\n                <button class="edit-btn"><img src="./assets/edit.svg"></button>\n                <button class="remove-btn"><img src="./assets/remove.svg"></button>\n            </div>\n        </div>`;document.querySelectorAll(".project-btn .remove-btn").forEach(((e,t)=>{e.addEventListener("click",(e=>{Fe.classList.add("hidden"),Qe.classList.add("hidden"),at.classList.add("hidden"),nt.classList.remove("hidden"),dt(),ct.textContent="Delete Project",rt.textContent=`${Ce.projectList[t].title}`,nt.onsubmit=()=>function(e){const t=document.querySelectorAll(".project-btn .remove-btn");Ce.removeProject(e),Se(),Be(),"allTasks"===Ie?Le("allTasks"):"today"===Ie?Le("today"):"week"===Ie&&Le("week"),Ie>e?(Le(Ie-1),Ee(Ie-1)):Ie<e?(Le(Ie),Ee(Ie)):0===Ie?(Le(e),Ee(e)):Ie===e&&(Le(e-1),Ee(e-1)),t.length-1==0&&(Te("allTasks","All tasks","stack"),Ee("allTasks"))}(t),e.stopPropagation()}))}));const t=document.querySelectorAll(".project-btn");t.forEach(((e,n)=>{e.addEventListener("click",(()=>{Ee(n),Le(Ie),ve.src="./assets/box.svg",t[n].classList.add("active")}))}));const n=document.querySelectorAll(".nav-btn");n.forEach(((e,t)=>{e.addEventListener("click",(()=>{n.forEach((e=>e.classList.remove("active"))),n[t].classList.add("active")}))})),document.querySelectorAll(".project-btn .edit-btn").forEach(((e,t)=>{e.addEventListener("click",(e=>{Fe.classList.remove("hidden"),Qe.classList.add("hidden"),nt.classList.add("hidden"),at.classList.add("hidden"),e.target.closest(".project-btn").classList.add("edit-active"),Ge.value=Ce.projectList[t].title,Ge.focus(),e.stopPropagation(),dt(),ct.textContent="Edit Project"}))}))}function Le(e){const t=document.querySelector(".task-list");function n(n){for(let r=0;r<n.length;r++){t.innerHTML+=`<div class="task-item-container ${n[r].checked?"checked":""}" \n            data-parent-project-index = ${n[r].parentProjectIndex} \n            data-task-index = ${n[r].taskIndex}>\n                <div class="checkbox-container">\n                    <input type="checkbox" class="task-checkbox ${n[r].priority}" name="check" ${n[r].checked?"checked":""}>\n                    <div class="task-title"> ${n[r].title}<br>\n                    <span class="parent-title">(${Ce.projectList[n[r].parentProjectIndex].title})</span>\n                    </div>\n                </div>\n                <div class="task-btns-container">\n                    <div class="task-priority">${n[r].priority}</div>\n                    <div class="task-date">${n[r].date}</div>\n                    <div class="edit-container">\n                        <button class="task-edit-btn edit-btn"><img src="./assets/edit.svg"></button>\n                        <button class="remove-task-btn remove-btn"><img src="./assets/remove.svg"></button>\n                    <div>\n                </div>\n            </div>`;const o=document.querySelectorAll(".parent-title");for(const t of o)0!==Ce.projectList.length&&Number.isInteger(e)?t.classList.add("hidden"):t.classList.remove("hidden")}}t.innerHTML="",0!==Ce.projectList.length&&("allTasks"===e?n(Ce.allTasks):"today"===e?n(Ce.todayTasks):"week"===e?n(Ce.weekTasks):(ke.textContent=Ce.projectList[e].title,n(Ce.projectList[e].tasks)),document.querySelectorAll(".task-btns-container .remove-task-btn").forEach((t=>{t.addEventListener("click",(t=>{Fe.classList.add("hidden"),Qe.classList.add("hidden"),nt.classList.add("hidden"),at.classList.remove("hidden"),dt(),ct.textContent="Delete Task";let n=t.target.closest(".task-item-container");n.classList.add("edit-active"),it.textContent=`'${Ce.projectList[n.dataset.parentProjectIndex].tasks[n.dataset.taskIndex].title}'`,at.onsubmit=()=>{Ce.removeTask(n.dataset.taskIndex,n.dataset.parentProjectIndex),Le("allTasks"===e?"allTasks":Ie),n.remove(),Be()},t.stopPropagation()}))})),document.querySelectorAll(".task-edit-btn").forEach((e=>{e.addEventListener("click",(e=>{Qe.classList.remove("hidden"),at.classList.add("hidden");let t=e.target.closest(".task-item-container");t.classList.add("edit-active"),Xe.value=Ce.projectList[t.dataset.parentProjectIndex].tasks[t.dataset.taskIndex].title,Ve.value=Ce.projectList[t.dataset.parentProjectIndex].tasks[t.dataset.taskIndex].priority,"no date"==Ce.projectList[t.dataset.parentProjectIndex].tasks[t.dataset.taskIndex].date?Ze.value="":Ze.value=Ce.projectList[t.dataset.parentProjectIndex].tasks[t.dataset.taskIndex].date,Xe.focus(),dt(),ct.textContent="Edit Task"}))})),document.querySelectorAll(".task-checkbox").forEach((e=>{e.addEventListener("click",(e=>{let t=e.target.closest(".task-item-container");Ce.checkTask(t.dataset.parentProjectIndex,t.dataset.taskIndex),Le(Ie),Be()}))})))}const De=document.querySelector("#title"),Me=document.querySelector("#date"),$e=document.querySelector("#date-today"),qe=document.querySelector("#date-tomorrow"),Pe=document.querySelector("#date-next-week"),Ue=document.querySelector("#task-form"),Ne=document.querySelector("#priority"),Ye=document.querySelector("#open-task-form");function We(){Ue.classList.add("hidden"),Ye.classList.remove("hidden")}Ye.addEventListener("click",(e=>{Ue.classList.remove("hidden"),Ye.classList.add("hidden"),De.focus()})),document.addEventListener("mousedown",(e=>{!Ue.contains(e.target)&&Number.isInteger(Ie)&&We()})),$e.addEventListener("click",(e=>{e.preventDefault(),Me.value=Ce.today})),qe.addEventListener("click",(e=>{e.preventDefault(),Me.value=Ce.tomorrow})),Pe.addEventListener("click",(e=>{e.preventDefault(),Me.value=Ce.nextWeek})),Ue.addEventListener("submit",(e=>{e.preventDefault();let t=Me.value;""===t&&(t="no date"),Ce.addTask(De.value,t,Ne.value,Ie),Ue.reset(),We(),Be(),Le(Ie)}));const Je=document.querySelector("#project-title"),Oe=document.querySelector("#project-form"),ze=document.querySelector("#open-project-form");function Re(){Oe.classList.add("hidden"),ze.classList.remove("hidden")}ze.addEventListener("click",(e=>{Oe.classList.remove("hidden"),ze.classList.add("hidden"),Je.focus()})),document.addEventListener("mousedown",(e=>{Oe.contains(e.target)||Re()})),Oe.addEventListener("submit",(e=>{e.preventDefault(),Ce.addProject(Je.value),Je.value="",Re(),Se(),Be(),Le(Ie),Ee(Ie)}));const Fe=document.querySelector("#edit-project-form");Fe.classList.add("hidden");const Ge=document.querySelector("#edit-project-title"),He=document.querySelector("#form-btn-cancel");Fe.addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector(".edit-active");t&&(Ce.editProject(t.dataset.projectIndex,Ge.value),Se(),Be(),Le(Ie),Ee(Ie),Ge.value=""),Fe.classList.add("hidden"),at.classList.add("hidden"),lt()})),He.addEventListener("click",(e=>{e.preventDefault(),Ge.value="",document.querySelectorAll(".project-btn").forEach((e=>e.classList.remove("edit-active"))),Fe.classList.add("hidden"),lt()}));const Qe=document.querySelector("#edit-task-form"),Xe=document.querySelector("#edit-task-title"),Ze=document.querySelector("#edit-date"),Ke=document.querySelector("#task-form-btn-cancel"),Ve=document.querySelector("#edit-priority"),_e=document.querySelector("#edit-date-today"),et=document.querySelector("#edit-date-tomorrow"),tt=document.querySelector("#edit-date-next-week");Qe.addEventListener("submit",(e=>{e.preventDefault();let t=Ze.value;t=""===t?"no date":Ze.value;const n=document.querySelector(".edit-active");n&&(Ce.editTask(n.dataset.parentProjectIndex,n.dataset.taskIndex,Xe.value,t,Ve.value),Be(),Le(Ie)),Qe.classList.add("hidden"),nt.classList.add("hidden"),Qe.reset(),lt()})),Ke.addEventListener("click",(e=>{e.preventDefault(),document.querySelectorAll(".task-item-container").forEach((e=>e.classList.remove("edit-active"))),Qe.classList.add("hidden"),lt()})),_e.addEventListener("click",(e=>{e.preventDefault(),Ze.value=Ce.today})),et.addEventListener("click",(e=>{e.preventDefault(),Ze.value=Ce.tomorrow})),tt.addEventListener("click",(e=>{e.preventDefault(),Ze.value=Ce.nextWeek}));const nt=document.querySelector("#delete-project-form"),rt=document.querySelector("#delete-project-form span"),ot=document.querySelector("#form-delete-project-cancel");nt.classList.add("hidden"),nt.addEventListener("submit",(e=>{e.preventDefault();const t=document.querySelector(".edit-active");t&&(Ce.removeProject(t.dataset.projectIndex),Se(),Be(),Le(Ie)),Fe.classList.add("hidden"),lt()})),ot.addEventListener("click",(e=>{e.preventDefault(),Ge.value="",document.querySelectorAll(".project-btn").forEach((e=>e.classList.remove("edit-active"))),Fe.classList.add("hidden"),lt()}));const at=document.querySelector("#delete-task-form"),it=document.querySelector("#delete-task-form span"),st=document.querySelector("#form-delete-task-cancel");at.classList.add("hidden"),at.addEventListener("submit",(e=>{e.preventDefault(),Qe.classList.add("hidden"),lt()})),st.addEventListener("click",(e=>{e.preventDefault(),Qe.classList.add("hidden"),lt()}));const ct=document.querySelector("#modal-title");function dt(){At.classList.add("active"),ut.classList.add("active"),ut.addEventListener("click",(()=>{lt()}))}function lt(){At.classList.remove("active"),ut.classList.remove("active"),Fe.classList.add("hidden"),Qe.classList.add("hidden"),nt.classList.add("hidden"),at.classList.add("hidden");const e=document.querySelectorAll(".project-btn"),t=document.querySelectorAll(".task-item-container");e.forEach((e=>e.classList.remove("edit-active"))),t.forEach((e=>e.classList.remove("edit-active")))}const At=document.querySelector(".modal"),ut=document.querySelector("#overlay"),mt=document.querySelector("#menu-overlay"),ft=document.querySelector("#burger"),ht=document.querySelector(".left-panel-container");function gt(){mt.classList.remove("active"),ht.classList.remove("active")}function pt(){mt.removeEventListener("click",pt),ft.checked=!1,gt()}ft.addEventListener("click",(e=>{1==e.target.checked?(ht.classList.add("active"),mt.classList.add("active"),ft.checked,mt.addEventListener("click",pt)):gt()})),Te("allTasks","All tasks","stack"),Se()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,